"Name"     = 'MI - Compiladores'
"Author"   = 'Esdras Abreu e Kevin Cerqueira'
"Version"  = '0.0.3'
"About"    = 'Expressões Lógica e Relacional'

"Start Symbol" = <Expression>
               
Identifier    = {Letter}({AlphaNumeric} | '_')*             
               
<Logical Operator>    ::= '&&'
                        | '||'
                        | '!'

<Relational Operator> ::= '<' 
                        | '>' 
                        | '==' 
                        | '!=' 
                        | '<='
                        | '>='
                        
<Assign>  ::=     '='   
               |  '+='
               |  '-='
               |  '*='
               |  '/='
               
<Aritmetic Operator>     ::= '+' 
                         |   '-' 
                         |   '*' 
                         |   '/'   

<Unary>       ::= '++'
               | '--' 
               
<Signal>        ::= '-'             
              

<Expression> ::= <Relational Expression> 
               | <Logic Expression>
               | <Aritmetic Expression>
               | <Derivative Rel Exp>
               | <Derivate Log Exp>
               | <Derivate Ari Exp>

<Relational Expression>  ::=   <Value> <Relational Operator> <Value>
                             | <Aritmetic Expression> <Relational Operator> <Aritmetic Expression>
                             
<Derivative Rel Exp>    ::=    <Relational Expression> <Relational Operator> <Relational Expression>
                             | <Value> <Relational Operator> <Relational Expression>
                             | <Relational Expression> <Relational Operator> <Value>
                             
<Aritmetic Expression>  ::=    <Value> <Aritmetic Operator> <Value>
                             | <Value> <unary>
                    
<Derivate Ari Exp>::=          <Aritmetic Expression> <Aritmetic Operator> <Aritmetic Expression>
                             | <Value> <Aritmetic Operator> <Aritmetic Expression>
                             | <Aritmetic Expression> <Aritmetic Operator> <Value>
                             | <Signal> <Aritmetic Expression>
 
                             
<Logic Expression>  ::=     '!' <Relational Expression>
                             
<Derivate Log Exp>::=          <Logic Expression> <Logical Operator> <Logic Expression>
                             | <Logic Expression> <Logical Operator> <Relational Expression>
                             | <Relational Expression> <Logical Operator> <Logic Expression>
                             |  '!' <Logic Expression>  
                            
                          
               
<Value>       ::= Identifier
               |<Signal> Identifier
